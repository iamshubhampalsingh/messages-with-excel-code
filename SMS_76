# Import necessary modules
import uiautomator2 as ui2
import time
import subprocess

receiver_device_serial = "192.168.168.16:5555"

# Create a Device object for the receiver device
receiver_device = ui2.Device(receiver_device_serial)

# Create a Device object for the sender device
sender_device_serial = "cf611ff9"
sender_device = ui2.Device(sender_device_serial)

# ADB command to retrieve power information
adb_command = ['adb', '-s', receiver_device_serial, 'shell', 'dumpsys', 'power']
# Define the initial swipe coordinates
start_x = 500
start_y = 500
end_y = 1500
swipe_duration = 0.5

# Perform multiple swipes to scroll the screen downwards
num_swipes = 5  # Adjust the number of swipes as needed
for _ in range(num_swipes):
    receiver_device.swipe(start_x, start_y, start_x, end_y, duration=swipe_duration)
    time.sleep(1)  # Adjust the delay between swipes if necessary

receiver_device(text="Off", description="Mobile data").click()
time.sleep(2)
receiver_device(resourceId="com.android.systemui:id/center_group").click()
time.sleep(2)

# Compose the message
receiver_device(text="Messages").click()
time.sleep(2)
receiver_device(text="Start chat").click()
time.sleep(2)
receiver_device(text="AAAAA").click()
receiver_device(text="Mobile+91 84486 97488").click()

num_runs = 10
for run in range(num_runs):
    receiver_device(resourceId="com.google.android.apps.messaging:id/compose_message_text").set_text("hello")
    time.sleep(2)
    receiver_device(resourceId="com.google.android.apps.messaging:id/send_message_button_container").click()
    time.sleep(2)
    
# Execute the ADB command and capture the output
result = subprocess.run(adb_command, capture_output=True, text=True)

# Check the sleep state in the output
output_lines = result.stdout.split('\n')
sleep_state = None
for line in output_lines:
    if "mWakefulness=" in line:
        sleep_state = line.split('=')[1]
        break

# Check the sleep state value and determine if the device is in deep sleep
if sleep_state == "Dozing" or sleep_state == "DeepSleep":
    print("Receiver device is in deep sleep mode.")
else:
    print("Receiver device is not in deep sleep mode.")
time.sleep(2)
receiver_device(resourceId="com.android.systemui:id/back").click()
time.sleep(2)
receiver_device(resourceId="com.google.android.apps.messaging:id/searchbar").click()
time.sleep(2)
if receiver_device(text="AAAAA").exists():
 print("recipient contacts are shown")
else:
 print("recipient contacts are not shown")

workbook = openpyxl.Workbook()
sheet = workbook.active

# Add headers to the sheet
sheet.append(["Serial No", "Test Case", "Result", "Timestamp"])

# Helper function to add results to the sheet
def add_result(serial_no, test_case, result):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    sheet.append([serial_no, test_case, result, timestamp])

# ... (Previous code here)

receiver_device(resourceId="com.android.systemui:id/back").click()
time.sleep(2)
add_result(4, "Navigate back", "Pass")

receiver_device(resourceId="com.google.android.apps.messaging:id/searchbar").click()
time.sleep(2)

if receiver_device(text="AAAAA").exists():
    print("Recipient contacts are shown")
    add_result(5, "Check recipient contacts", "Pass")
else:
    print("Recipient contacts are not shown")
    add_result(5, "Check recipient contacts", "Fail")

# Save the results to an Excel file
result_file = "test_results.xlsx"
workbook.save(result_file)
