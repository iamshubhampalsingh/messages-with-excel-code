import uiautomator2 as ui2
import time
import subprocess
from openpyxl import Workbook
from datetime import datetime

receiver_device_serial = "192.168.155.53:5555"

# Create a Device object for the receiver device
receiver_device = ui2.Device(receiver_device_serial)

# Initialize result recording list
results = []

# Function to add result to the list
def add_result(serial_number, description, result):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    results.append((serial_number, description, result, timestamp))

# Your existing code
receiver_device(text="Messages").click()
time.sleep(2)
receiver_device(resourceId="com.google.android.apps.messaging:id/searchbar").click()
time.sleep(2)
receiver_device(resourceId="com.google.android.apps.messaging:id/zero_state_search_box_auto_complete").set_text("Shubham")
time.sleep(2)
receiver_device.xpath('/...').click()  # Your existing code

# Check if contact was found
if receiver_device(resourceId="com.google.android.apps.messaging:id/conversation_name", text="Shubham").exists():
    print("Contacts can be found")
    add_result(1, "Find Contact Test", "Pass")
else:
    print("Contacts cannot be found")
    add_result(1, "Find Contact Test", "Fail")

# Save results to an Excel file
def save_results_to_excel(results):
    wb = Workbook()
    ws = wb.active
    ws.append(["Serial No", "Description", "Result", "Timestamp"])
    
    for serial, desc, result, timestamp in results:
        ws.append([serial, desc, result, timestamp])
    
    wb.save("test_results.xlsx")

# Save the results to an Excel file
save_results_to_excel(results)
