import uiautomator2 as ui2
import time
import subprocess
import pandas as pd
from datetime import datetime

# ... Your device setup ...

# Create an empty DataFrame to store results
results_df = pd.DataFrame(columns=['Serial No', 'Description', 'Pass/Fail', 'Timestamp'])

# Function to add a result to the DataFrame
def add_result(serial_no, description, pass_fail):
    global results_df
    results_df = results_df.append({
        'Serial No': serial_no,
        'Description': description,
        'Pass/Fail': pass_fail,
        'Timestamp': datetime.now()
    }, ignore_index=True)

try:
    # Compose and send messages from the sender device
    receiver_device(text="Messages").click()
    time.sleep(2)
    receiver_device(resourceId="com.google.android.apps.messaging:id/og_apd_internal_image_view").click()
    time.sleep(2)
    receiver_device(resourceId="com.google.android.apps.messaging:id/og_text_card_title", text="Messages settings").click()
    time.sleep(2)
    receiver_device(resourceId="android:id/title", text="Notifications").click()
    time.sleep(2)
    receiver_device(resourceId="android:id/title", text="Incoming messages").click()
    time.sleep(2)
    receiver_device(resourceId="android:id/title", text="Show notification dot").click()
    time.sleep(2)
    print("Show notification dot off")
    add_result(1, 'Change Notification Settings', 'Pass')
    
    # ... Your other steps ...
    
    # Compose and send messages from the sender device
    sender_device(text="Messages").click()
    time.sleep(2)
    sender_device(text="Start chat").click()
    time.sleep(2)
    sender_device(text="AAAAA").click()
    sender_device(text="Mobile+91 84486 97488").click()

    num_runs = 10
    for run in range(num_runs):
        sender_device(resourceId="com.google.android.apps.messaging:id/compose_message_text").set_text("hello")
        time.sleep(2)
        sender_device(resourceId="com.google.android.apps.messaging:id/send_message_button_container").click()
        time.sleep(2)

    add_result(2, 'Sending Messages', 'Pass')

except Exception as e:
    print("An error occurred:", str(e))
    add_result(1, 'Change Notification Settings', 'Fail')
    add_result(2, 'Sending Messages', 'Fail')

# Export the DataFrame to an Excel file
excel_filename = 'test_results.xlsx'
results_df.to_excel(excel_filename, index=False)
print(f'Results exported to {excel_filename}')
