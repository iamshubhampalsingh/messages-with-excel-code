import uiautomator2 as ui2
import time
import pandas as pd

def main():
    # Connect to the device
    receiver_device_serial = "192.168.168.16:5555"
    receiver_device = ui2.Device(receiver_device_serial)

    time.sleep(2)  # Wait for 2 seconds

    # Click on the "Messages" element
    receiver_device(text="Messages").click()
    time.sleep(2)  # Wait for 2 seconds

    # Click on the "Start chat" element
    receiver_device(text="Start chat").click()
    time.sleep(2)  # Wait for 2 seconds

    # Enter "Shubham" in the text field
    receiver_device(resourceId="com.google.android.apps.messaging:id/contact_picker_search_input").set_text("Shubham")
    time.sleep(2)

    # Click on the contact named "Shubham"
    receiver_device(text="Shubham").click()
    time.sleep(2)

    # Navigate back
    receiver_device(resourceId="com.android.systemui:id/back").click()
    time.sleep(2)

    receiver_device(resourceId="com.android.systemui:id/back").click()
    time.sleep(2)

    # Enter "AAAAA" in the text field and check if the element exists
    receiver_device(resourceId="com.google.android.apps.messaging:id/contact_picker_search_input").set_text("AAAAA")
    time.sleep(2)
    
    result = ""
    if receiver_device(text="AAAAA").exists():
        receiver_device(text="AAAAA").click()
        time.sleep(2)
        result = "Test passed: Element found and clicked"
    else:
        result = "Test failed: Element not found"

    # Create a DataFrame to store the test result
    test_case = "element_presence_test"
    timestamp = time.strftime('%Y-%m-%d %H:%M:%S')

    test_results_df = pd.DataFrame({
        'Serial No': [receiver_device_serial],
        'Test Case No': [test_case],
        'Result': [result],
        'Timestamp': [timestamp]
    })

    # Save the DataFrame to an Excel file
    excel_filename = 'test_results.xlsx'
    try:
        existing_data = pd.read_excel(excel_filename)
        updated_data = pd.concat([existing_data, test_results_df], ignore_index=True)
        updated_data.to_excel(excel_filename, index=False)
        print("Test result appended to", excel_filename)
    except FileNotFoundError:
        test_results_df.to_excel(excel_filename, index=False)
        print("Test result saved to", excel_filename)

    # Print the test result
    print(result)

if __name__ == "__main__":
    main()
