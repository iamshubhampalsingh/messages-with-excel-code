import uiautomator2 as ui2
import time
import subprocess
import pandas as pd

def main():
    # Connect to the device
    receiver_device_serial = "192.168.168.16:5555"
    receiver_device = ui2.Device(receiver_device_serial)
    
    time.sleep(2)  # Wait for 2 seconds
    
    # Click on the "Messages" element
    receiver_device(text="Messages").click()
    time.sleep(2)  # Wait for 2 seconds
    
    # Click on the "Start chat" element
    receiver_device(text="Start chat").click()
    time.sleep(2)  # Wait for 2 seconds
    
    # Click on the "AAAAA" element
    receiver_device(text="AAAAA").click()
    time.sleep(2)  # Wait for 2 seconds
    
    # Click on the "Mobile+91 84486 97488" element
    receiver_device(text="Mobile+91 84486 97488").click()
    time.sleep(2)  # Wait for 2 seconds
    
    receiver_device(resourceId="com.android.systemui:id/menu_container").click()
    time.sleep(2)  # Wait for 2 seconds
    
    # Check if the "Gboard" element exists and click on it
    if receiver_device(resourceId="android:id/text1", text="Gboard").exists():
        result = "Gboard exists"
        receiver_device(resourceId="android:id/text1", text="Gboard").click()
    else:
        result = "Gboard does not exist"
    
    time.sleep(2)  # Wait for 2 seconds
    
    receiver_device.press("home")
    
    # Create a DataFrame to store the test result
    test_case = "gboard_check_test"
    timestamp = time.strftime('%Y-%m-%d %H:%M:%S')
    test_results_df = pd.DataFrame({
        'Serial No': [receiver_device_serial],
        'Test Case No': [test_case],
        'Result': [result],
        'Timestamp': [timestamp]
    })
    
    # Save the DataFrame to an Excel file
    excel_filename = 'test_results.xlsx'
    try:
        existing_data = pd.read_excel(excel_filename)
        updated_data = pd.concat([existing_data, test_results_df], ignore_index=True)
        updated_data.to_excel(excel_filename, index=False)
        print("Test result appended to", excel_filename)
    except FileNotFoundError:
        test_results_df.to_excel(excel_filename, index=False)
        print("Test result saved to", excel_filename)

    # Print the test result
    print(result)

if __name__ == "__main__":
    main()
