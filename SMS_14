import uiautomator2 as ui2
import time
import pandas as pd

# Connect to the devices
receiver_device_serial = "192.168.168.16:5555"
receiver_device = ui2.Device(receiver_device_serial)
time.sleep(2)

# Open Messages and Start Chat
receiver_device(text="Messages").click()
time.sleep(2)
receiver_device(text="Start chat").click()
time.sleep(2)

# Click on an element using XPath
receiver_device.xpath('//android.widget.ScrollView').click()
time.sleep(2)

# Set text input using XPath
receiver_device.xpath('//android.widget.ScrollView').set_text("Shubham")
time.sleep(2)

# Select contact and send RCS message
receiver_device(text="Shubham").click()
time.sleep(2)
receiver_device(text="RCS message").set_text("THISISSHUBHAMPALSINGH")
time.sleep(2)
receiver_device(resourceId="com.google.android.apps.messaging:id/send_message_button_container").click()
time.sleep(2)

# Perform a long press on the audio button using swipe
audio_button = receiver_device(resourceId="com.google.android.apps.messaging:id/audio_button_view_microphone_icon")
start_x, start_y = audio_button.center()
end_x, end_y = start_x, start_y
duration = 2  # Specify the duration for the long press in seconds
receiver_device.swipe(start_x, start_y, end_x, end_y, duration=duration)

# Add a delay to allow time for the long press action to take effect
time.sleep(2)

# Check if the voice icon is displayed on the screen
if receiver_device(resourceId="com.google.android.apps.messaging:id/audio_preview_container").exists:
    result = "Voice icon is displaying on the screen"
else:
    result = "Voice icon is not displaying on the screen"

# Create a DataFrame to store the test result
test_case = "voice_icon_test"
timestamp = time.strftime('%Y-%m-%d %H:%M:%S')
test_results_df = pd.DataFrame({
    'Serial No': [receiver_device_serial],
    'Test Case No': [test_case],
    'Result': [result],
    'Timestamp': [timestamp]
})

# Save the DataFrame to an Excel file
excel_filename = 'test_results.xlsx'
try:
    existing_data = pd.read_excel(excel_filename)
    updated_data = pd.concat([existing_data, test_results_df], ignore_index=True)
    updated_data.to_excel(excel_filename, index=False)
    print("Test result appended to", excel_filename)
except FileNotFoundError:
    test_results_df.to_excel(excel_filename, index=False)
    print("Test result saved to", excel_filename)

# Print the test result
print(result)
